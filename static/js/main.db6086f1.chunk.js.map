{"version":3,"sources":["components/Login.js","components/Header.js","components/Home.js","components/LoaderComponent.js","components/Jobs.js","components/JobDetails.js","components/NotFound.js","components/ProtectedRoute.js","App.js","index.js"],"names":["Login","username","setUsername","useState","password","setPassword","errorMsg","setErrorMsg","showError","setShowError","history","useHistory","onSubmitFailure","undefined","Cookies","get","_jsx","Redirect","to","className","children","_jsxs","onSubmit","async","event","preventDefault","userDetails","options","method","body","JSON","stringify","response","fetch","data","json","ok","jwtToken","set","expires","replace","onSubmitSuccess","jwt_token","error_msg","error","src","alt","htmlFor","type","id","value","onChange","e","target","placeholder","withRouter","props","Link","onClick","onClickLogout","remove","Home","_Fragment","Header","LoaderComponent","Loader","color","height","width","employmentTypesList","label","employmentTypeId","salaryRangesList","salaryRangeId","apiStatusConstants","Jobs","jobsList","setJobsList","apiStatus","setApiStatus","profileData","setProfileData","profileApiStatus","setProfileApiStatus","searchInput","setSearchInput","employmentType","setEmploymentType","minimumPackage","setMinimumPackage","getJobs","useCallback","apiUrl","join","headers","Authorization","updatedData","jobs","map","job","companyLogoUrl","company_logo_url","employment_type","jobDescription","job_description","location","packagePerAnnum","package_per_annum","rating","title","getProfile","name","profile_details","profileImageUrl","profile_image_url","shortBio","short_bio","useEffect","onChangeSearchInput","onEnterSearchInput","key","onClickSearchButton","renderJobsSuccessView","length","onSelectEmploymentType","checked","prev","filter","each","onSelectSalaryRange","onKeyDown","renderProfile","range","renderJobs","JobDetails","jobData","setJobData","similarJobs","setSimilarJobs","getJobData","match","params","job_details","companyWebsiteUrl","company_website_url","lifeAtCompany","description","life_at_company","imageUrl","image_url","skills","skill","updatedSimilarJobs","similar_jobs","renderJobDetails","renderJobDetailsSuccessView","href","rel","NotFound","ProtectedRoute","Route","App","Switch","exact","path","component","ReactDOM","render","React","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.db6086f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\n// Test Credentials\n// username: rahul\n// password: rahul@2021\nimport { Redirect, useHistory } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nconst Login = () => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMsg, setErrorMsg] = useState('');\n  const [showError, setShowError] = useState(false);\n  const history = useHistory();\n\n  const onSubmitSuccess = jwtToken => {\n    Cookies.set('jwt_token', jwtToken, { expires: 30 });\n    history.replace('/');\n  };\n\n  const onSubmitFailure = errorMsg => {\n    setShowError(true);\n    setErrorMsg(errorMsg);\n  };\n\n  const submitForm = async event => {\n    event.preventDefault();\n    const userDetails = { username, password };\n    const url = 'https://apis.ccbp.in/login';\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    };\n\n    try {\n      const response = await fetch(url, options);\n      const data = await response.json();\n\n      if (response.ok) {\n        onSubmitSuccess(data.jwt_token);\n      } else {\n        onSubmitFailure(data.error_msg);\n      }\n    } catch (error) {\n      onSubmitFailure('Something went wrong. Please try again.');\n    }\n  };\n\n  const jwtToken = Cookies.get('jwt_token');\n  if (jwtToken !== undefined) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <div className=\"login-container\">\n      <form className=\"form-container\" onSubmit={submitForm}>\n        <img\n          src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n          alt=\"website logo\"\n          className=\"login-website-logo\"\n        />\n        <div className=\"input-container\">\n          <label className=\"input-label\" htmlFor=\"username\">\n            USERNAME\n          </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            className=\"username-input-field\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            placeholder=\"Username\"\n          />\n        </div>\n        <div className=\"input-container\">\n          <label className=\"input-label\" htmlFor=\"password\">\n            PASSWORD\n          </label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            className=\"password-input-field\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            placeholder=\"Password\"\n          />\n        </div>\n        <button type=\"submit\" className=\"login-button\">\n          Login\n        </button>\n        {showError && <p className=\"error-message\">*{errorMsg}</p>}\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nconst Header = props => {\n  const onClickLogout = () => {\n    const { history } = props;\n    Cookies.remove('jwt_token');\n    history.replace('/login');\n  };\n\n  return (\n    <nav className=\"nav-header\">\n      <div className=\"nav-content\">\n        <Link to=\"/\">\n          <img\n            className=\"website-logo\"\n            src=\"https://assets.ccbp.in/frontend/react-js/logo-img.png\"\n            alt=\"website logo\"\n          />\n        </Link>\n        <ul className=\"nav-menu\">\n          <li>\n            <Link to=\"/\" className=\"nav-link\">\n              Home\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/jobs\" className=\"nav-link\">\n              Jobs\n            </Link>\n          </li>\n        </ul>\n        <button\n          type=\"button\"\n          className=\"logout-desktop-btn\"\n          onClick={onClickLogout}\n        >\n          Logout\n        </button>\n      </div>\n    </nav>\n  );\n};\n\nexport default withRouter(Header);\n","import React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Header from './Header';\n\nconst Home = () => {\n  const jwtToken = Cookies.get('jwt_token');\n  \n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"home-container\">\n        <div className=\"home-content\">\n          <h1 className=\"home-heading\">\n            Find The Job That Fits Your Life\n          </h1>\n          <p className=\"home-description\">\n            Millions of people are searching for jobs, salary information, company reviews. Find the job that fits your abilities and potential.\n          </p>\n          <Link to=\"/jobs\">\n            <button className=\"find-jobs-button\" type=\"button\">\n              Find Jobs\n            </button>\n          </Link>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst LoaderComponent = () => (\n  <div className=\"loader-container\" data-testid=\"loader\">\n    <Loader type=\"ThreeDots\" color=\"#0b69ff\" height=\"50\" width=\"50\" />\n  </div>\n);\n\nexport default LoaderComponent;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Header from './Header';\nimport LoaderComponent from './LoaderComponent';\n\nconst employmentTypesList = [\n  { label: 'Full Time', employmentTypeId: 'FULLTIME' },\n  { label: 'Part Time', employmentTypeId: 'PARTTIME' },\n  { label: 'Freelance', employmentTypeId: 'FREELANCE' },\n  { label: 'Internship', employmentTypeId: 'INTERNSHIP' },\n];\n\nconst salaryRangesList = [\n  { salaryRangeId: '1000000', label: '10 LPA and above' },\n  { salaryRangeId: '2000000', label: '20 LPA and above' },\n  { salaryRangeId: '3000000', label: '30 LPA and above' },\n  { salaryRangeId: '4000000', label: '40 LPA and above' },\n];\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n};\n\nconst Jobs = () => {\n  const [jobsList, setJobsList] = useState([]);\n  const [apiStatus, setApiStatus] = useState(apiStatusConstants.initial);\n  const [profileData, setProfileData] = useState({});\n  const [profileApiStatus, setProfileApiStatus] = useState(\n    apiStatusConstants.initial,\n  );\n  const [searchInput, setSearchInput] = useState('');\n  const [employmentType, setEmploymentType] = useState([]);\n  const [minimumPackage, setMinimumPackage] = useState('');\n\n  const getJobs = useCallback(async () => {\n    setApiStatus(apiStatusConstants.inProgress);\n    const jwtToken = Cookies.get('jwt_token');\n    const apiUrl = `https://apis.ccbp.in/jobs?employment_type=${employmentType.join()}&minimum_package=${minimumPackage}&search=${searchInput}`;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    };\n\n    try {\n      const response = await fetch(apiUrl, options);\n      const data = await response.json();\n      if (response.ok) {\n        const updatedData = data.jobs.map(job => ({\n          companyLogoUrl: job.company_logo_url,\n          employmentType: job.employment_type,\n          id: job.id,\n          jobDescription: job.job_description,\n          location: job.location,\n          packagePerAnnum: job.package_per_annum,\n          rating: job.rating,\n          title: job.title,\n        }));\n        setJobsList(updatedData);\n        setApiStatus(apiStatusConstants.success);\n      } else {\n        setApiStatus(apiStatusConstants.failure);\n      }\n    } catch (error) {\n      setApiStatus(apiStatusConstants.failure);\n    }\n  }, [employmentType, minimumPackage, searchInput]);\n\n  const getProfile = async () => {\n    setProfileApiStatus(apiStatusConstants.inProgress);\n    const jwtToken = Cookies.get('jwt_token');\n    const apiUrl = 'https://apis.ccbp.in/profile';\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    };\n\n    try {\n      const response = await fetch(apiUrl, options);\n      const data = await response.json();\n      if (response.ok) {\n        const updatedData = {\n          name: data.profile_details.name,\n          profileImageUrl: data.profile_details.profile_image_url,\n          shortBio: data.profile_details.short_bio,\n        };\n        setProfileData(updatedData);\n        setProfileApiStatus(apiStatusConstants.success);\n      } else {\n        setProfileApiStatus(apiStatusConstants.failure);\n      }\n    } catch (error) {\n      setProfileApiStatus(apiStatusConstants.failure);\n    }\n  };\n\n  useEffect(() => {\n    getProfile();\n    getJobs();\n  }, [getJobs]);\n\n  const onChangeSearchInput = event => {\n    setSearchInput(event.target.value);\n  };\n\n  const onEnterSearchInput = event => {\n    if (event.key === 'Enter') {\n      getJobs();\n    }\n  };\n\n  const onClickSearchButton = () => {\n    getJobs();\n  };\n\n  const renderSearchInput = () => (\n    <div className=\"search-input-container\">\n      <input\n        type=\"search\"\n        className=\"search-input\"\n        placeholder=\"Search\"\n        value={searchInput}\n        onChange={onChangeSearchInput}\n        onKeyDown={onEnterSearchInput}\n      />\n      <button\n        type=\"button\"\n        data-testid=\"searchButton\"\n        className=\"search-button\"\n        onClick={onClickSearchButton}\n      >\n        Search\n      </button>\n    </div>\n  );\n\n  const renderProfileSuccessView = () => (\n    <div className=\"profile-container\">\n      <img\n        src={profileData.profileImageUrl}\n        alt=\"profile\"\n        className=\"profile-img\"\n      />\n      <h1 className=\"profile-name\">{profileData.name}</h1>\n      <p className=\"profile-description\">{profileData.shortBio}</p>\n    </div>\n  );\n\n  const renderProfileFailureView = () => (\n    <div className=\"profile-error-view-container\">\n      <button\n        type=\"button\"\n        className=\"profile-failure-button\"\n        onClick={getProfile}\n      >\n        Retry\n      </button>\n    </div>\n  );\n\n  const renderProfileLoadingView = () => (\n    <div className=\"profile-loader-container\" data-testid=\"loader\">\n      <LoaderComponent />\n    </div>\n  );\n\n  const renderProfile = () => {\n    switch (profileApiStatus) {\n      case apiStatusConstants.success:\n        return renderProfileSuccessView();\n      case apiStatusConstants.failure:\n        return renderProfileFailureView();\n      case apiStatusConstants.inProgress:\n        return renderProfileLoadingView();\n      default:\n        return null;\n    }\n  };\n\n  const renderNoJobsView = () => (\n    <div className=\"no-jobs-view\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/no-jobs-img.png\"\n        className=\"no-jobs-img\"\n        alt=\"no jobs\"\n      />\n      <h1>No Jobs Found</h1>\n      <p>We could not find any jobs. Try other filters.</p>\n    </div>\n  );\n\n  const renderJobsSuccessView = () => {\n    if (jobsList.length === 0) {\n      return renderNoJobsView();\n    }\n    return (\n      <ul className=\"jobs-list\">\n        {jobsList.map(job => (\n          <li className=\"job-item\" key={job.id}>\n            <Link to={`/jobs/${job.id}`} className=\"link-item\">\n              <div className=\"company-container\">\n                <img\n                  src={job.companyLogoUrl}\n                  alt=\"company logo\"\n                  className=\"company-logo\"\n                />\n                <div className=\"title-rating-container\">\n                  <h1>{job.title}</h1>\n                  <p>Rating: {job.rating}</p>\n                </div>\n              </div>\n              <div className=\"location-package-container\">\n                <div className=\"location-employment-container\">\n                  <p>Location: {job.location}</p>\n                  <p>Employment Type: {job.employmentType}</p>\n                </div>\n                <p>{job.packagePerAnnum}</p>\n              </div>\n              <hr className=\"line\" />\n              <h1>Description</h1>\n              <p>{job.jobDescription}</p>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  const renderJobsFailureView = () => (\n    <div className=\"jobs-error-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"jobs-failure-img\"\n      />\n      <h1>Oops! Something Went Wrong</h1>\n      <p>We cannot seem to find the page you are looking for.</p>\n      <button type=\"button\" className=\"jobs-failure-button\" onClick={getJobs}>\n        Retry\n      </button>\n    </div>\n  );\n\n  const renderLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <LoaderComponent />\n    </div>\n  );\n\n  const renderJobs = () => {\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return renderJobsSuccessView();\n      case apiStatusConstants.failure:\n        return renderJobsFailureView();\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n      default:\n        return null;\n    }\n  };\n\n  const onSelectEmploymentType = event => {\n    const { checked, value } = event.target;\n    if (checked) {\n      setEmploymentType(prev => [...prev, value]);\n    } else {\n      setEmploymentType(prev => prev.filter(each => each !== value));\n    }\n  };\n\n  const onSelectSalaryRange = event => {\n    setMinimumPackage(event.target.value);\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"jobs-container\">\n        <div className=\"jobs-content\">\n          <div className=\"search-filters-container\">\n            {renderSearchInput()}\n            {renderProfile()}\n            <hr className=\"line\" />\n            <h1 className=\"filter-heading\">Type of Employment</h1>\n            <ul className=\"employment-types-list\">\n              {employmentTypesList.map(type => (\n                <li className=\"employment-item\" key={type.employmentTypeId}>\n                  <input\n                    type=\"checkbox\"\n                    id={type.employmentTypeId}\n                    className=\"checkbox\"\n                    value={type.employmentTypeId}\n                    onChange={onSelectEmploymentType}\n                  />\n                  <label className=\"label\" htmlFor={type.employmentTypeId}>\n                    {type.label}\n                  </label>\n                </li>\n              ))}\n            </ul>\n            <hr className=\"line\" />\n            <h1 className=\"filter-heading\">Salary Range</h1>\n            <ul className=\"salary-ranges-list\">\n              {salaryRangesList.map(range => (\n                <li className=\"salary-item\" key={range.salaryRangeId}>\n                  <input\n                    type=\"radio\"\n                    id={range.salaryRangeId}\n                    className=\"radio\"\n                    name=\"salary\"\n                    value={range.salaryRangeId}\n                    onChange={onSelectSalaryRange}\n                  />\n                  <label className=\"label\" htmlFor={range.salaryRangeId}>\n                    {range.label}\n                  </label>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"jobs-list-container\">{renderJobs()}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Jobs;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport Header from './Header';\nimport LoaderComponent from './LoaderComponent';\n\nconst apiStatusConstants = {\n  initial: 'INITIAL',\n  success: 'SUCCESS',\n  failure: 'FAILURE',\n  inProgress: 'IN_PROGRESS',\n};\n\nconst JobDetails = props => {\n  const [jobData, setJobData] = useState({});\n  const [similarJobs, setSimilarJobs] = useState([]);\n  const [apiStatus, setApiStatus] = useState(apiStatusConstants.initial);\n\n  const getJobData = useCallback(async () => {\n    const { match } = props;\n    const { params } = match;\n    const { id } = params;\n\n    setApiStatus(apiStatusConstants.inProgress);\n    const jwtToken = Cookies.get('jwt_token');\n    const apiUrl = `https://apis.ccbp.in/jobs/${id}`;\n    const options = {\n      headers: {\n        Authorization: `Bearer ${jwtToken}`,\n      },\n      method: 'GET',\n    };\n\n    try {\n      const response = await fetch(apiUrl, options);\n      const data = await response.json();\n\n      if (response.ok) {\n        const updatedData = {\n          companyLogoUrl: data.job_details.company_logo_url,\n          companyWebsiteUrl: data.job_details.company_website_url,\n          employmentType: data.job_details.employment_type,\n          id: data.job_details.id,\n          jobDescription: data.job_details.job_description,\n          lifeAtCompany: {\n            description: data.job_details.life_at_company.description,\n            imageUrl: data.job_details.life_at_company.image_url,\n          },\n          location: data.job_details.location,\n          packagePerAnnum: data.job_details.package_per_annum,\n          rating: data.job_details.rating,\n          skills: data.job_details.skills.map(skill => ({\n            imageUrl: skill.image_url,\n            name: skill.name,\n          })),\n          title: data.job_details.title,\n        };\n\n        const updatedSimilarJobs = data.similar_jobs.map(job => ({\n          companyLogoUrl: job.company_logo_url,\n          employmentType: job.employment_type,\n          id: job.id,\n          jobDescription: job.job_description,\n          location: job.location,\n          rating: job.rating,\n          title: job.title,\n        }));\n\n        setJobData(updatedData);\n        setSimilarJobs(updatedSimilarJobs);\n        setApiStatus(apiStatusConstants.success);\n      } else {\n        setApiStatus(apiStatusConstants.failure);\n      }\n    } catch (error) {\n      setApiStatus(apiStatusConstants.failure);\n    }\n  }, [props]);\n\n  useEffect(() => {\n    getJobData();\n  }, [getJobData]);\n\n  const renderJobDetailsSuccessView = () => {\n    const {\n      companyLogoUrl,\n      companyWebsiteUrl,\n      employmentType,\n      jobDescription,\n      lifeAtCompany,\n      location,\n      packagePerAnnum,\n      rating,\n      skills,\n      title,\n    } = jobData;\n\n    return (\n      <div className=\"job-details-success-container\">\n        <div className=\"job-details-container\">\n          <div className=\"company-container\">\n            <img\n              src={companyLogoUrl}\n              alt=\"job details company logo\"\n              className=\"company-logo\"\n            />\n            <div className=\"title-rating-container\">\n              <h1>{title}</h1>\n              <p>Rating: {rating}</p>\n            </div>\n          </div>\n          <div className=\"location-package-container\">\n            <div className=\"location-employment-container\">\n              <p>Location: {location}</p>\n              <p>Employment Type: {employmentType}</p>\n            </div>\n            <p>{packagePerAnnum}</p>\n          </div>\n          <hr className=\"line\" />\n          <div className=\"description-container\">\n            <div className=\"description-visit-container\">\n              <h1>Description</h1>\n              <a href={companyWebsiteUrl} target=\"_blank\" rel=\"noreferrer\">\n                Visit\n              </a>\n            </div>\n            <p>{jobDescription}</p>\n          </div>\n          <h1>Skills</h1>\n          <ul className=\"skills-list\">\n            {skills.map(skill => (\n              <li className=\"skill-item\" key={skill.name}>\n                <img src={skill.imageUrl} alt={skill.name} className=\"skill-image\" />\n                <p>{skill.name}</p>\n              </li>\n            ))}\n          </ul>\n          <div className=\"life-at-company-container\">\n            <div className=\"life-at-company-description\">\n              <h1>Life at Company</h1>\n              <p>{lifeAtCompany.description}</p>\n            </div>\n            <img\n              src={lifeAtCompany.imageUrl}\n              alt=\"life at company\"\n              className=\"life-at-company-image\"\n            />\n          </div>\n        </div>\n        <h1>Similar Jobs</h1>\n        <ul className=\"similar-jobs-list\">\n          {similarJobs.map(job => (\n            <li className=\"similar-job-item\" key={job.id}>\n              <div className=\"company-container\">\n                <img\n                  src={job.companyLogoUrl}\n                  alt=\"similar job company logo\"\n                  className=\"company-logo\"\n                />\n                <div className=\"title-rating-container\">\n                  <h1>{job.title}</h1>\n                  <p>Rating: {job.rating}</p>\n                </div>\n              </div>\n              <h1>Description</h1>\n              <p>{job.jobDescription}</p>\n              <div className=\"location-employment-container\">\n                <p>Location: {job.location}</p>\n                <p>Employment Type: {job.employmentType}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  };\n\n  const renderFailureView = () => (\n    <div className=\"job-details-failure-view-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/failure-img.png\"\n        alt=\"failure view\"\n        className=\"failure-view-image\"\n      />\n      <h1>Oops! Something Went Wrong</h1>\n      <p>We cannot seem to find the page you are looking for.</p>\n      <button\n        type=\"button\"\n        className=\"retry-button\"\n        onClick={getJobData}\n      >\n        Retry\n      </button>\n    </div>\n  );\n\n  const renderLoadingView = () => (\n    <div className=\"loader-container\" data-testid=\"loader\">\n      <LoaderComponent />\n    </div>\n  );\n\n  const renderJobDetails = () => {\n    switch (apiStatus) {\n      case apiStatusConstants.success:\n        return renderJobDetailsSuccessView();\n      case apiStatusConstants.failure:\n        return renderFailureView();\n      case apiStatusConstants.inProgress:\n        return renderLoadingView();\n      default:\n        return null;\n    }\n  };\n\n  const jwtToken = Cookies.get('jwt_token');\n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <>\n      <Header />\n      <div className=\"job-details-container\">\n        {renderJobDetails()}\n      </div>\n    </>\n  );\n};\n\nexport default JobDetails;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './Header';\n\nconst NotFound = () => (\n  <>\n    <Header />\n    <div className=\"not-found-container\">\n      <img\n        src=\"https://assets.ccbp.in/frontend/react-js/jobby-app-not-found-img.png\"\n        alt=\"not found\"\n        className=\"not-found-img\"\n      />\n      <h1 className=\"not-found-heading\">Page Not Found</h1>\n      <p className=\"not-found-description\">\n        We're sorry, the page you requested could not be found.\n      </p>\n      <Link to=\"/\">\n        <button type=\"button\" className=\"home-button\">\n          Go Back to Home\n        </button>\n      </Link>\n    </div>\n  </>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport Cookies from 'js-cookie';\n\nconst ProtectedRoute = props => {\n  const jwtToken = Cookies.get('jwt_token');\n  \n  if (jwtToken === undefined) {\n    return <Redirect to=\"/login\" />;\n  }\n  \n  return <Route {...props} />;\n};\n\nexport default ProtectedRoute;\n","import React from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Jobs from './components/Jobs';\nimport JobDetails from './components/JobDetails';\nimport NotFound from './components/NotFound';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport './App.css';\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <ProtectedRoute exact path=\"/\" component={Home} />\n    <ProtectedRoute exact path=\"/jobs\" component={Jobs} />\n    <ProtectedRoute exact path=\"/jobs/:id\" component={JobDetails} />\n    <Route path=\"/not-found\" component={NotFound} />\n    <Redirect to=\"/not-found\" />\n  </Switch>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}